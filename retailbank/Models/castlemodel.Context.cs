//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace retailbank.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB03TMS24_1819Entities : DbContext
    {
        public DB03TMS24_1819Entities()
            : base("name=DB03TMS24_1819Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<logincastle_3> logincastle_3 { get; set; }
        public virtual DbSet<castleaccount33> castleaccount33 { get; set; }
        public virtual DbSet<Custdet_1288> Custdet_1288 { get; set; }
        public virtual DbSet<transaction33> transaction33 { get; set; }
    
        public virtual int sp_Custdet_1288(ObjectParameter custid, Nullable<long> custSsnId, string custName, Nullable<int> age, string address1, string address2, string city, string state, string displayMessage, string accountStatus)
        {
            var custSsnIdParameter = custSsnId.HasValue ?
                new ObjectParameter("custSsnId", custSsnId) :
                new ObjectParameter("custSsnId", typeof(long));
    
            var custNameParameter = custName != null ?
                new ObjectParameter("custName", custName) :
                new ObjectParameter("custName", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var displayMessageParameter = displayMessage != null ?
                new ObjectParameter("DisplayMessage", displayMessage) :
                new ObjectParameter("DisplayMessage", typeof(string));
    
            var accountStatusParameter = accountStatus != null ?
                new ObjectParameter("AccountStatus", accountStatus) :
                new ObjectParameter("AccountStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Custdet_1288", custid, custSsnIdParameter, custNameParameter, ageParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, displayMessageParameter, accountStatusParameter);
        }
    
        public virtual int updatecastle(ObjectParameter custid, Nullable<long> custSsnId, string custName, Nullable<int> age, string address1, string address2, string city, string state)
        {
            var custSsnIdParameter = custSsnId.HasValue ?
                new ObjectParameter("custSsnId", custSsnId) :
                new ObjectParameter("custSsnId", typeof(long));
    
            var custNameParameter = custName != null ?
                new ObjectParameter("custName", custName) :
                new ObjectParameter("custName", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatecastle", custid, custSsnIdParameter, custNameParameter, ageParameter, address1Parameter, address2Parameter, cityParameter, stateParameter);
        }
    
        public virtual int update_customer(ObjectParameter custid, Nullable<long> custSsnId, string custName, Nullable<int> age, string address1, string address2, string city, string state)
        {
            var custSsnIdParameter = custSsnId.HasValue ?
                new ObjectParameter("custSsnId", custSsnId) :
                new ObjectParameter("custSsnId", typeof(long));
    
            var custNameParameter = custName != null ?
                new ObjectParameter("custName", custName) :
                new ObjectParameter("custName", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_customer", custid, custSsnIdParameter, custNameParameter, ageParameter, address1Parameter, address2Parameter, cityParameter, stateParameter);
        }
    
        public virtual int delete_castle(Nullable<int> custid)
        {
            var custidParameter = custid.HasValue ?
                new ObjectParameter("custid", custid) :
                new ObjectParameter("custid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_castle", custidParameter);
        }
    
        public virtual int addaccount(Nullable<int> customerId, string accountType, Nullable<int> depositAmmount)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var depositAmmountParameter = depositAmmount.HasValue ?
                new ObjectParameter("DepositAmmount", depositAmmount) :
                new ObjectParameter("DepositAmmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addaccount", customerIdParameter, accountTypeParameter, depositAmmountParameter);
        }
    
        public virtual int addaccount33(Nullable<int> customerId, string accountType, string showMessage, string accountStatus, Nullable<int> balance, ObjectParameter flagg)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var showMessageParameter = showMessage != null ?
                new ObjectParameter("ShowMessage", showMessage) :
                new ObjectParameter("ShowMessage", typeof(string));
    
            var accountStatusParameter = accountStatus != null ?
                new ObjectParameter("AccountStatus", accountStatus) :
                new ObjectParameter("AccountStatus", typeof(string));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addaccount33", customerIdParameter, accountTypeParameter, showMessageParameter, accountStatusParameter, balanceParameter, flagg);
        }
    
        public virtual int deleteaccount33(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteaccount33", accountIdParameter);
        }
    
        public virtual int deposit(Nullable<int> accountId, string showMessage, Nullable<int> depositamount, ObjectParameter transactionId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var showMessageParameter = showMessage != null ?
                new ObjectParameter("ShowMessage", showMessage) :
                new ObjectParameter("ShowMessage", typeof(string));
    
            var depositamountParameter = depositamount.HasValue ?
                new ObjectParameter("depositamount", depositamount) :
                new ObjectParameter("depositamount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deposit", accountIdParameter, showMessageParameter, depositamountParameter, transactionId);
        }
    
        public virtual int withdrawl(Nullable<int> accountId, string showMessage, Nullable<int> withdrawlamount, ObjectParameter flag, ObjectParameter transactionId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var showMessageParameter = showMessage != null ?
                new ObjectParameter("ShowMessage", showMessage) :
                new ObjectParameter("ShowMessage", typeof(string));
    
            var withdrawlamountParameter = withdrawlamount.HasValue ?
                new ObjectParameter("withdrawlamount", withdrawlamount) :
                new ObjectParameter("withdrawlamount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("withdrawl", accountIdParameter, showMessageParameter, withdrawlamountParameter, flag, transactionId);
        }
    
        public virtual int transfermoney(Nullable<int> accid1, Nullable<int> accid2, Nullable<int> amount, string showMessage, ObjectParameter transid, ObjectParameter flag)
        {
            var accid1Parameter = accid1.HasValue ?
                new ObjectParameter("accid1", accid1) :
                new ObjectParameter("accid1", typeof(int));
    
            var accid2Parameter = accid2.HasValue ?
                new ObjectParameter("accid2", accid2) :
                new ObjectParameter("accid2", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            var showMessageParameter = showMessage != null ?
                new ObjectParameter("ShowMessage", showMessage) :
                new ObjectParameter("ShowMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("transfermoney", accid1Parameter, accid2Parameter, amountParameter, showMessageParameter, transid, flag);
        }
    }
}
